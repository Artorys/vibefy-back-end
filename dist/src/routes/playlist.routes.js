"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.playlistRoutes = void 0;
const express_1 = require("express");
const playlist_1 = require("../schema/playlist");
const listPlaylist_controller_1 = require("../controllers/playlist/listPlaylist.controller");
const createPlaylist_controller_1 = require("../controllers/playlist/createPlaylist.controller");
const deletePlaylist_controller_1 = require("../controllers/playlist/deletePlaylist.controller");
const addMusicPlaylist_controller_1 = require("../controllers/playlist/addMusicPlaylist.controller");
const listMusicsPlaylist_controller_1 = require("../controllers/playlist/listMusicsPlaylist.controller");
const deleteMusicPlaylist_controller_1 = require("../controllers/playlist/deleteMusicPlaylist.controller");
const checkIdMiddleware_1 = require("../middleware/checkIdMiddleware");
const verifyAuthAdminMiddleware_1 = require("../middleware/verifyAuthAdminMiddleware");
const verifyAuthTokenMiddleware_1 = require("../middleware/verifyAuthTokenMiddleware");
const schemaValidation_middleware_1 = require("../middleware/schemaValidation.middleware");
const routes = (0, express_1.Router)();
const playlistRoutes = () => {
    routes.post("", verifyAuthTokenMiddleware_1.verifyAuthTokenMiddleware, verifyAuthAdminMiddleware_1.verifyAuthAdminMiddleware, (0, schemaValidation_middleware_1.schemaValidationMiddleware)(playlist_1.playlistCreate), createPlaylist_controller_1.createPlaylistController);
    routes.post("/:id/:id_music", verifyAuthTokenMiddleware_1.verifyAuthTokenMiddleware, verifyAuthAdminMiddleware_1.verifyAuthAdminMiddleware, checkIdMiddleware_1.checkIdMiddleware, addMusicPlaylist_controller_1.addMusicPlaylistController);
    routes.get("", verifyAuthTokenMiddleware_1.verifyAuthTokenMiddleware, listPlaylist_controller_1.listPlaylistController);
    routes.get("/:id", verifyAuthTokenMiddleware_1.verifyAuthTokenMiddleware, verifyAuthAdminMiddleware_1.verifyAuthAdminMiddleware, checkIdMiddleware_1.checkIdMiddleware, listMusicsPlaylist_controller_1.listMusicsPlaylistController);
    routes.delete("/:id", verifyAuthTokenMiddleware_1.verifyAuthTokenMiddleware, verifyAuthAdminMiddleware_1.verifyAuthAdminMiddleware, checkIdMiddleware_1.checkIdMiddleware, deletePlaylist_controller_1.deletePlaylistController);
    routes.delete("/:id/:id_music", verifyAuthTokenMiddleware_1.verifyAuthTokenMiddleware, verifyAuthAdminMiddleware_1.verifyAuthAdminMiddleware, checkIdMiddleware_1.checkIdMiddleware, deleteMusicPlaylist_controller_1.deleteMusicPlaylistController);
    return routes;
};
exports.playlistRoutes = playlistRoutes;
